syntax = "proto3";

package nc;

import "google/protobuf/empty.proto";
import "github.com/brocaar/loraserver/api/gw/gw.proto";

// NetworkControllerService is the server to be implemeted by the network-controller.
service NetworkControllerService {
	// HandleUplinkMetaData handles uplink meta-rata.
	rpc HandleUplinkMetaData(HandleUplinkMetaDataRequest) returns (google.protobuf.Empty) {}

	// HandleUplinkMACCommand handles an uplink mac-command.
	// This method will only be called in case the mac-command request was
	// enqueued throught the API or when the CID is >= 0x80 (proprietary
	// mac-command range).
	rpc HandleUplinkMACCommand(HandleUplinkMACCommandRequest) returns (google.protobuf.Empty) {}
}

message HandleUplinkMetaDataRequest {
	// Device EUI (8 bytes).
	bytes dev_eui = 1;

	// TX meta-data.
	gw.UplinkTXInfo tx_info = 2;

	// RX meta-data.
	repeated gw.UplinkRXInfo rx_info = 3;
}


message HandleUplinkMACCommandRequest {
	// Device EUI (8 bytes).
	bytes dev_eui = 1;

	// Command identifier (specified by the LoRaWAN specs).
	uint32 cid = 2;

	// MAC-command payload(s).
	repeated bytes commands = 6;
}
